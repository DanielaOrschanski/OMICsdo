#' @title index Ref STAR
#' @description Index genome reference version HG38 with STAR.
#' @return Paths of FASTA and GTF(annotation) from the genome reference.
indexRefSTAR <- function(AnnotationHG38, FastaHG38) {
  soft_directory <- sprintf("%s/OMICsdoSof", Sys.getenv('R_LIBS_USER'))
  #soft_directory <- sprintf("%s/OMICsdoSof",libPath)
  softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER') ))
  #softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", libPath))
  linea_software <- grep("(?i)HG38Index", softwares, ignore.case = TRUE, value = TRUE)

  if(length(nchar(linea_software)) == 0) {
    #Index genome reference
    message("The genome reference will be index, please be patient this process may take some minutes.")
    nThreads <- max(1,parallel::detectCores()-2)

    STAR <- downloadSTAR()

    log <- system2(command = STAR,
                   args = c(paste0("--runThreadN ", nThreads),
                            "--runMode genomeGenerate",
                            paste0("--genomeDir " , sprintf("%s/HG38/index", soft_directory)),
                            paste0("--genomeFastaFiles ", FastaHG38),
                            "--sjdbOverhang 100 ",
                            "--genomeSAindexNbases 12",
                            paste0("--sjdbGTFfile ", AnnotationHG38)
                   ), stdout = TRUE)#out.file)

    #Writes down the paths in the txt
    HG38Index <- sprintf("%s/HG38/index", soft_directory)
    softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))
    softwares_actualizado <- c(softwares, sprintf("HG38Index %s", HG38Index))
    write(softwares_actualizado, file = sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))

    return(HG38Index)

  } else {
    message("The reference genome was already indexed")
    HG38Index <- sprintf("%s/HG38/index", soft_directory)
    return(HG38Index)

  }

}

#' @title downloadHG38
#' @description Downloads the FASTA and the annotation of the genome reference version HG38.
#' @return Paths of FASTA and GTF(annotation) from the genome reference.
#' @import GEOquery
#' @export
downloadHG38 <- function() {
  message("ESTOY EN DOWNLOAD HG38")
  soft_directory <- sprintf("%s/OMICsdoSof", Sys.getenv('R_LIBS_USER'))
  #soft_directory <- sprintf("%s/OMICsdoSof",libPath)

  #Checks if Annotation is already downloaded --------------------
  softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))
  #softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", libPath))

  linea_software <- grep("HG38Annotation", softwares, ignore.case = TRUE, value = TRUE)

  if(length(nchar(linea_software)) == 0) {
    #download Annotation
    message("HG38 annotation will be downloaded")
    dir.create(sprintf("%s/HG38", soft_directory))
    URL <- "https://ftp.ensembl.org/pub/release-110/gtf/homo_sapiens/Homo_sapiens.GRCh38.110.gtf.gz"
    dir <- sprintf("%s/HG38", soft_directory)
    setwd(dir)
    system2("wget", args = c(URL, "-P", dir), wait = TRUE, stdout = NULL, stderr = NULL)
    AnnotationHG38 <- sprintf("%s/HG38/Homo_sapiens.GRCh38.110.gtf.gz", soft_directory)
    gunzip(AnnotationHG38, destname = gsub("[.]gz$", "", AnnotationHG38), overwrite = FALSE, remove = TRUE)
    AnnotationHG38 <<- sprintf("%s/HG38/Homo_sapiens.GRCh38.110.gtf", soft_directory)

    #Writes down the paths in the txt
    softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))
    softwares_actualizado <- c(softwares, sprintf("HG38Annotation %s", AnnotationHG38))
    write(softwares_actualizado, file = sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))

  } else {
    message("The annotation for HG38 was already downloaded")
    AnnotationHG38 <<- strsplit(linea_software, " ")[[1]][[2]]
  }

  #Checks if FASTA is already downloaded --------------------------------------------------------
  linea_software <- grep("HG38FASTA", softwares, ignore.case = TRUE, value = TRUE)

  if(length(nchar(linea_software)) == 0) {
    message("HG38 FASTA will be downloaded")
    #download Fasta HG38
    URL <- "https://ftp.ensembl.org/pub/release-110/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz"
    system2("wget", args = c(URL, "-P", dir), wait = TRUE, stdout = NULL, stderr = NULL)

    FastaHG38 <- sprintf("%s/HG38/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz", soft_directory)
    gunzip(FastaHG38, destname = gsub("[.]gz$", "", FastaHG38), overwrite = FALSE, remove = TRUE)
    FastaHG38 <<- sprintf("%s/HG38/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa", soft_directory)

    #Writes down the paths in the txt
    softwares <- readLines(sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))
    softwares_actualizado <- c(softwares, sprintf("HG38FASTA %s", FastaHG38))
    write(softwares_actualizado, file = sprintf("%s/OMICsdoSof/path_to_soft.txt", Sys.getenv('R_LIBS_USER')))

  } else {
    message("The fasta file for HG38 was already downloaded")
    FastaHG38 <<- strsplit(linea_software, " ")[[1]][[2]]
  }


  index_dir <- indexRefSTAR(AnnotationHG38, FastaHG38)

  return(c(AnnotationHG38, FastaHG38, index_dir))

}


